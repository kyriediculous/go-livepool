
version: 2

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-builder
      - build:
          requires:
            - build-builder

jobs:
  build-builder:
    docker:
      - image: circleci/golang:1.15.5
    working_directory: /go/src/github.com/kyriediculous/go-livepool

    environment:
      PKG_CONFIG_PATH: /root/compiled/lib/pkgconfig
      GOPATH: /go
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - checkout
      - setup_remote_docker:
          # This actually only exists for paid plans. But it's good luck!
          docker_layer_caching: false

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS

      # First, build the Linux-specific builder container
      - run: docker pull livepool/build-platform:latest || echo 'no pre-existing cache found'
      - run: docker build -t livepool/build-platform:latest --cache-from=livepool/build-platform:latest -f docker/Dockerfile.build-linux .
      - run: docker push livepool/build-platform:latest

      # Then, build the actual app in a container shared between Linux and Windows
      - run: docker pull livepool/build:latest || echo 'no pre-existing cache found'
      - run: |-
          source ./ci_env.sh
          docker build --build-arg HIGHEST_CHAIN_TAG -t livepool/build:latest --cache-from=livepool/build:latest -f docker/Dockerfile.build .
      - run: docker push livepool/build:latest

      # Finally, build the minimal go-livepeer distributable. We publish two tags for each build:
      # livepeer/go-livepeer:BRANCH_NAME and livepeer/go-livepeer:VERSION_STRING. Both are useful
      # to pull from in different contexts.
      - run: |-
          # Our Docker tag name should be our branch name with just alphanums
          BRANCH_TAG=$(echo $CIRCLE_BRANCH | sed 's/\//-/g' | tr -cd '[:alnum:]_-')
          VERSION_TAG=$(./print_version.sh)
          docker build -t current-build -f docker/Dockerfile.release-linux .
          for TAG in $BRANCH_TAG $VERSION_TAG; do
            docker tag current-build livepool/go-livepool:${TAG}-linux
            docker push livepool/go-livepool:${TAG}-linux
            # Manifest step is optional in case the Windows build hasn't finished yet
            docker manifest create livepool/go-livepool:${TAG} livepool/go-livepool:${TAG}-linux livepool/go-livepool:${TAG}-windows || true
            docker manifest push livepool/go-livepool:${TAG} || true
          done

  build:
    docker:
      # Note race condition - we might get the wrong builder if lots of builds are happening in
      # parallel because this pulls it down from Docker Hub.
      - image: livepool/build:latest
    working_directory: /build

    environment:
      PKG_CONFIG_PATH: /root/compiled/lib/pkgconfig
      TEST_RESULTS: /tmp/test-results
      GOPATH: /go

    steps:
      - checkout

      - run: mkdir -p $TEST_RESULTS
      - setup_remote_docker:
          # This actually only exists for paid plans. But it's good luck!
          docker_layer_caching: false

      - run:
          name: Lint
          command: |
            golangci-lint --disable-all --enable=gofmt --enable=vet --enable=golint --deadline=4m run pm verification

    #  - run:
    #      name: Upload build
    #      command: ./upload_build.sh

      - save_cache:
          key: v3-pkg-cache
          paths:
            - "/go/pkg"
            - "/home/circleci/compiled"
            - "/home/circleci/nasm/nasm"
            - "/home/circleci/x264/x264"
            - "/home/circleci/ffmpeg/libavcodec/libavcodec.a"

